{"repository_name":"github.com/vladfaust/tarantool-crystal","body":"# Tarantool\n\n[![Built with Crystal](https://img.shields.io/badge/built%20with-crystal-000000.svg?style=flat-square)](https://crystal-lang.org/)\n[![Build status](https://img.shields.io/travis/vladfaust/tarantool-crystal/master.svg?style=flat-square)](https://travis-ci.org/vladfaust/tarantool-crystal)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg?style=flat-square)](https://vladfaust.com/tarantool-crystal)\n[![Releases](https://img.shields.io/github/release/vladfaust/tarantool-crystal.svg?style=flat-square)](https://github.com/vladfaust/tarantool-crystal/releases)\n[![vladfaust.com](https://img.shields.io/badge/style-.com-lightgrey.svg?longCache=true&style=flat-square&label=vladfaust&colorB=0a83d8)](https://vladfaust.com)\n\nThe Tarantool driver for Crystal.\n\n## About\n\n[Tarantool](https://tarantool.io/) is a super-fast NoSQL* in-memory database. [Crystal](https://crystal-lang.org/) is a super-fast compiled language. Take both.\n\n\\* *It is planned to fully support SQL in version 2, which is currently in alpha*\n\n## Benchmarks\n\nRecent benchmarking of 100k `select` requests on a single 0.90Ghz CPU core with Tarantool running on the same machine via Docker:\n\n```\n$ crystal bench/select.cr --release\n  1.530000   1.070000   2.600000 (  2.597737)\n```\n\nResulting performance is **38.4k RPS**, averaging in **26Î¼s** per request.\n\n## Funding\n\nThis is one of my commerical projects. It's MIT licensed; bugs are fixed for free but features and support are paid (drop me an email at mail@vladfaust.com). I still accept pull requests though.\n\nThis shard has been initially sponsored by [to.click](https://to.click).\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  tarantool:\n    github: vladfaust/tarantool-crystal\n    version: ~> 0.1.0 # See actual version in releases\n```\n\nThis shard follows [Semantic Versioning 2.0.0](https://semver.org/), so see [releases](https://github.com/vladfaust/tarantool-crystal/releases) and change the `version` accordingly.\n\n## Usage\n\nAfter you [installed and run Tarantool](https://tarantool.io/en/doc/1.9/book/getting_started/index.html) and setup your schema, do:\n\n```crystal\nrequire \"tarantool\"\n\ndb = Tarantool::Connection.new(\"localhost\", 3301) # Initiate the connection\ndb.parse_schema # Save current box schema to db instance\ndb.insert(:examples, {1, \"hello\"}) # Insert \"hello\" tuple\ndb.update(:examples, :primary, {1}, {\"=\", 1, \"hello world\"}) # Replace \"hello\" with \"hello world\"\ndb.select(:examples, :name, {\"hello world\"}).body.data # => [[1, \"hello world\"]]\n```\n\nAll `Tarantool::Connection#*` requests are *synchronous*, they will be waiting until the response is received. However, a single Tarantool instance itself is capable of handling lots of simultaneous connections, so for the best perfomance consider running requests in multiple fibers:\n\n```crystal\n32.times do\n  spawn do\n    db.ping # All 32 pings are executed concurrently\n  end\nend\n```\n\n## Testing\n\n1. Run `docker run --name mytarantool -d -p 3301:3301 -v /var/lib/docker/volumes/tarantool:/var/lib/tarantool tarantool/tarantool:1`\n2. Connect to tarantool via console (`docker exec -i -t mytarantool console`) and apply schema found in `/spec/schema.lua`\n3. `crystal spec`\n\n## Contributing\n\n1. Fork it ( https://github.com/vladfaust/tarantool/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [@vladfaust](https://github.com/vladfaust) Vlad Faust - creator, maintainer\n","program":{"html_id":"github.com/vladfaust/tarantool-crystal/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/vladfaust/tarantool-crystal","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool","path":"Tarantool.html","kind":"module","full_name":"Tarantool","name":"Tarantool","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"tarantool/constants.cr","line_number":1,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr"},{"filename":"tarantool/connection/requests.cr","line_number":3,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr"},{"filename":"tarantool/response/error.cr","line_number":1,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response/error.cr"},{"filename":"tarantool/response.cr","line_number":5,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr"},{"filename":"tarantool/connection.cr","line_number":12,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr"},{"filename":"tarantool/version.cr","line_number":1,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/version.cr"},{"filename":"tarantool.cr","line_number":4,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool.cr"}],"repository_name":"github.com/vladfaust/tarantool-crystal","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"VERSION","value":"\"0.0.1\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The Tarantool driver for Crystal. See `Connection`.","summary":"<p>The Tarantool driver for Crystal.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/CommandCode","path":"Tarantool/CommandCode.html","kind":"enum","full_name":"Tarantool::CommandCode","name":"CommandCode","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/vladfaust/tarantool-crystal/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/vladfaust/tarantool-crystal/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/vladfaust/tarantool-crystal/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/vladfaust/tarantool-crystal/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"tarantool/constants.cr","line_number":21,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr"}],"repository_name":"github.com/vladfaust/tarantool-crystal","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"name":"Select","value":"1","doc":null,"summary":null},{"name":"Insert","value":"2","doc":null,"summary":null},{"name":"Replace","value":"3","doc":null,"summary":null},{"name":"Update","value":"4","doc":null,"summary":null},{"name":"Delete","value":"5","doc":null,"summary":null},{"name":"Call16","value":"6","doc":null,"summary":null},{"name":"Auth","value":"7","doc":null,"summary":null},{"name":"Eval","value":"8","doc":null,"summary":null},{"name":"Upsert","value":"9","doc":null,"summary":null},{"name":"Call","value":"10","doc":null,"summary":null},{"name":"Ping","value":"64","doc":null,"summary":null},{"name":"Join","value":"65","doc":null,"summary":null},{"name":"Subscribe","value":"66","doc":null,"summary":null},{"name":"RequestVote","value":"67","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool","kind":"module","full_name":"Tarantool","name":"Tarantool"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"auth?-instance-method","html_id":"auth?-instance-method","name":"auth?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L28","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L28","def":{"name":"auth?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Auth"}},{"id":"call16?-instance-method","html_id":"call16?-instance-method","name":"call16?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L27","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L27","def":{"name":"call16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Call16"}},{"id":"call?-instance-method","html_id":"call?-instance-method","name":"call?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L31","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L31","def":{"name":"call?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Call"}},{"id":"delete?-instance-method","html_id":"delete?-instance-method","name":"delete?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L26","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L26","def":{"name":"delete?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Delete"}},{"id":"eval?-instance-method","html_id":"eval?-instance-method","name":"eval?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L29","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L29","def":{"name":"eval?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Eval"}},{"id":"insert?-instance-method","html_id":"insert?-instance-method","name":"insert?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L23","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L23","def":{"name":"insert?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Insert"}},{"id":"join?-instance-method","html_id":"join?-instance-method","name":"join?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L33","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L33","def":{"name":"join?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Join"}},{"id":"ping?-instance-method","html_id":"ping?-instance-method","name":"ping?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L32","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L32","def":{"name":"ping?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Ping"}},{"id":"replace?-instance-method","html_id":"replace?-instance-method","name":"replace?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L24","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L24","def":{"name":"replace?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Replace"}},{"id":"request_vote?-instance-method","html_id":"request_vote?-instance-method","name":"request_vote?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L35","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L35","def":{"name":"request_vote?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RequestVote"}},{"id":"select?-instance-method","html_id":"select?-instance-method","name":"select?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L22","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L22","def":{"name":"select?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Select"}},{"id":"subscribe?-instance-method","html_id":"subscribe?-instance-method","name":"subscribe?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L34","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L34","def":{"name":"subscribe?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Subscribe"}},{"id":"update?-instance-method","html_id":"update?-instance-method","name":"update?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L25","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L25","def":{"name":"update?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Update"}},{"id":"upsert?-instance-method","html_id":"upsert?-instance-method","name":"upsert?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L30","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L30","def":{"name":"upsert?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Upsert"}}],"macros":[],"types":[]},{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Connection","path":"Tarantool/Connection.html","kind":"class","full_name":"Tarantool::Connection","name":"Connection","abstract":false,"superclass":{"html_id":"github.com/vladfaust/tarantool-crystal/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Connection/Requests","kind":"module","full_name":"Tarantool::Connection::Requests","name":"Requests"},{"html_id":"github.com/vladfaust/tarantool-crystal/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/vladfaust/tarantool-crystal/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"tarantool/connection/requests.cr","line_number":4,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr"},{"filename":"tarantool/connection.cr","line_number":26,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr"}],"repository_name":"github.com/vladfaust/tarantool-crystal","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Connection/Requests","kind":"module","full_name":"Tarantool::Connection::Requests","name":"Requests"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool","kind":"module","full_name":"Tarantool","name":"Tarantool"},"doc":"A main class which holds a TCP connection to a Tarantool instance.\n\nIts interaction methods (`#ping`, `#select`, `#update` etc.) are synchronous and always return a `Response` instance (except for `#ping` which returns `Time`).\n\nIt's recommended to call `#parse_schema` right after initialization.\n\nWhen `#parse_schema` is called, referencing spaces and indexes by their names (either strings or symbols) is allowed:\n\n```\ndb.select(:examples, :primary, {1}) # Raises ArgumentError\ndb.parse_schema\ndb.select(:examples, :primary, {1})\n```","summary":"<p>A main class which holds a TCP connection to a Tarantool instance.</p>","class_methods":[],"constructors":[{"id":"new(host:String,port:Int32,user:String?=nil,password:String=&quot;&quot;,*,logger:Logger?=nil)-class-method","html_id":"new(host:String,port:Int32,user:String?=nil,password:String=&amp;quot;&amp;quot;,*,logger:Logger?=nil)-class-method","name":"new","doc":"Initialize a new Tarantool connection.\n\n```\ndb = Tarantool::Connection.new(\"localhost\", 3301, \"admin\", \"password\", logger: Logger.new(STDOUT))\ndb.ping # => 00:00:00.000181477\n```","summary":"<p>Initialize a new Tarantool connection.</p>","abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"},{"name":"user","doc":null,"default_value":"nil","external_name":"user","restriction":"String | ::Nil"},{"name":"password","doc":null,"default_value":"\"\"","external_name":"password","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"logger","doc":null,"default_value":"nil","external_name":"logger","restriction":"Logger | ::Nil"}],"args_string":"(host : String, port : Int32, user : String? = <span class=\"n\">nil</span>, password : String = <span class=\"s\">&quot;&quot;</span>, *, logger : Logger? = <span class=\"n\">nil</span>)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr#L59","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr#L59","def":{"name":"new","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"String"},{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"},{"name":"user","doc":null,"default_value":"nil","external_name":"user","restriction":"String | ::Nil"},{"name":"password","doc":null,"default_value":"\"\"","external_name":"password","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"logger","doc":null,"default_value":"nil","external_name":"logger","restriction":"Logger | ::Nil"}],"double_splat":null,"splat_index":4,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(host, port, user, password, logger: logger)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(uri:String,*,logger=nil)-class-method","html_id":"new(uri:String,*,logger=nil)-class-method","name":"new","doc":"Initialize a new Tarantool connection with string URI.\n\n```\ndb = Tarantool::Connection.new(\"tarantool://admin:password@localhost:3301\")\n```","summary":"<p>Initialize a new Tarantool connection with string URI.</p>","abstract":false,"args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"logger","doc":null,"default_value":"nil","external_name":"logger","restriction":""}],"args_string":"(uri : String, *, logger = <span class=\"n\">nil</span>)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr#L39","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr#L39","def":{"name":"new","args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"logger","doc":null,"default_value":"nil","external_name":"logger","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(uri, logger: logger)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(uri:URI,*,logger=nil)-class-method","html_id":"new(uri:URI,*,logger=nil)-class-method","name":"new","doc":"Initialize a new Tarantool connection with URI.\n\n```\nuri = URI.parse(\"tarantool://localhost:3301\")\ndb = Tarantool::Connection.new(uri)\n```","summary":"<p>Initialize a new Tarantool connection with URI.</p>","abstract":false,"args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"logger","doc":null,"default_value":"nil","external_name":"logger","restriction":""}],"args_string":"(uri : URI, *, logger = <span class=\"n\">nil</span>)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr#L49","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr#L49","def":{"name":"new","args":[{"name":"uri","doc":null,"default_value":"","external_name":"uri","restriction":"URI"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"logger","doc":null,"default_value":"nil","external_name":"logger","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(uri, logger: logger)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":"Close the connection.","summary":"<p>Close the connection.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr#L101","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr#L101","def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@open = false\n@socket.close\n@channels.clear\n"}},{"id":"parse_schema-instance-method","html_id":"parse_schema-instance-method","name":"parse_schema","doc":"Parse current box schema. Allows to use named spaces and indexes in requests.\nNOTE: This will fail if current user doesn't have execute access to \"universe\".","summary":"<p>Parse current box schema.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr#L122","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr#L122","def":{"name":"parse_schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((eval(\"return box.space\")).body.data.first.as(Hash)).keys.each do |space|\n  indexes = (eval(\"return box.space.#{space}.index\")).body.data.first\n  if indexes.is_a?(Array)\n    indexes = Hash(String, UInt8).new\n  else\n    indexes = (indexes.as(Hash)).reduce({} of String => UInt8) do |hash, __arg3|\n      name = __arg3[0]\n      value = __arg3[1]\n      if name.is_a?(String)\n        hash[name.as(String)] = (value.as(Hash))[\"id\"].as(UInt8)\n      end\n      hash\n    end\n  end\n  @schema[space.as(String)] = {id: (eval(\"return box.space.#{space}.id\")).body.data.first.as(UInt16), indexes: indexes}\nend"}},{"id":"schema:Schema-instance-method","html_id":"schema:Schema-instance-method","name":"schema","doc":"A small copy of current box schema containing spaces and their indexes.\nAllows to use named spaces and indexes in requests.\n\nUpdated by calling `#parse_schema`.\n\nYou can also modify it yourself:\n```\ndb.schema[\"examples\"] = {id: 999_u16, indexes: {\"primary\": 0_u8}}\n```","summary":"<p>A small copy of current box schema containing spaces and their indexes.</p>","abstract":false,"args":[],"args_string":" : Schema","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr#L118","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr#L118","def":{"name":"schema","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Schema","visibility":"Public","body":"@schema"}}],"macros":[],"types":[{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Connection/Requests","path":"Tarantool/Connection/Requests.html","kind":"module","full_name":"Tarantool::Connection::Requests","name":"Requests","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"tarantool/connection/requests.cr","line_number":5,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr"}],"repository_name":"github.com/vladfaust/tarantool-crystal","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Connection","kind":"class","full_name":"Tarantool::Connection","name":"Connection"}],"namespace":{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Connection","kind":"class","full_name":"Tarantool::Connection","name":"Connection"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"authenticate(username:String,password:String=&quot;&quot;)-instance-method","html_id":"authenticate(username:String,password:String=&amp;quot;&amp;quot;)-instance-method","name":"authenticate","doc":"Send AUTHORIZATION request.\n\nFrom Tarantool docs: \"Authentication in Tarantool is optional, if no authentication is performed, session user is âguestâ. The instance responds to authentication packet with a standard response with 0 tuples.\"\n\n```\ndb.authenticate(\"guest\").success?          # => true\ndb.authenticate(\"john\", \"secret\").success? # => true\n```","summary":"<p>Send AUTHORIZATION request.</p>","abstract":false,"args":[{"name":"username","doc":null,"default_value":"","external_name":"username","restriction":"String"},{"name":"password","doc":null,"default_value":"\"\"","external_name":"password","restriction":"String"}],"args_string":"(username : String, password : String = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L25","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L25","def":{"name":"authenticate","args":[{"name":"username","doc":null,"default_value":"","external_name":"username","restriction":"String"},{"name":"password","doc":null,"default_value":"\"\"","external_name":"password","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"salt = (Base64.decode(@encoded_salt))[0, 20]\nstep_1 = Digest::SHA1.new.tap(&.update(password)).result\nstep_2 = Digest::SHA1.new.tap(&.update(step_1)).result\nstep_3 = Digest::SHA1.new.tap(&.update(salt)).tap(&.update(step_2)).result\nscramble = step_1.map_with_index do |byte, i|\n  byte ^ step_3[i]\nend.to_slice\nsend(CommandCode::Auth, {Key::Username.value => username, Key::Tuple.value => [\"chap-sha1\", scramble]})\n"}},{"id":"call(function:String|Symbol,args:Tuple|Array=[]ofMessagePack::Type)-instance-method","html_id":"call(function:String|Symbol,args:Tuple|Array=[]ofMessagePack::Type)-instance-method","name":"call","doc":"Send CALL request.\n\nFrom Tarantool docs: \"Call a stored function, returning an array of tuples.\"\n\n```\ndb.call(:my_func)\n```","summary":"<p>Send CALL request.</p>","abstract":false,"args":[{"name":"function","doc":null,"default_value":"","external_name":"function","restriction":"String | Symbol"},{"name":"args","doc":null,"default_value":"[] of MessagePack::Type","external_name":"args","restriction":"Tuple | Array"}],"args_string":"(function : String | Symbol, args : Tuple | Array = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">MessagePack</span><span class=\"t\">::</span><span class=\"t\">Type</span>)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L178","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L178","def":{"name":"call","args":[{"name":"function","doc":null,"default_value":"","external_name":"function","restriction":"String | Symbol"},{"name":"args","doc":null,"default_value":"[] of MessagePack::Type","external_name":"args","restriction":"Tuple | Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"send(CommandCode::Call, {Key::FunctionName.value => function, Key::Tuple.value => args})"}},{"id":"delete(space:Int|String|Symbol,index:Int|String|Symbol,key:Tuple|Array)-instance-method","html_id":"delete(space:Int|String|Symbol,index:Int|String|Symbol,key:Tuple|Array)-instance-method","name":"delete","doc":"Send DELETE request.\n\nFrom Tarantool docs: \"Delete a tuple.\"\n\n```\ndb.delete(999, 1, {\"vladfaust\"})           # Will delete the entry\ndb.delete(:examples, :name, {\"vladfaust\"}) # ditto\n```","summary":"<p>Send DELETE request.</p>","abstract":false,"args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Int | String | Symbol"},{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int | String | Symbol"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Tuple | Array"}],"args_string":"(space : Int | String | Symbol, index : Int | String | Symbol, key : Tuple | Array)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L157","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L157","def":{"name":"delete","args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Int | String | Symbol"},{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int | String | Symbol"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Tuple | Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"convert_space_and_index\nsend(CommandCode::Delete, {Key::SpaceID.value => space, Key::IndexID.value => index, Key::Key.value => key})\n"}},{"id":"eval(expression:String,args:Tuple|Array=[]ofMessagePack::Type)-instance-method","html_id":"eval(expression:String,args:Tuple|Array=[]ofMessagePack::Type)-instance-method","name":"eval","doc":"Send EVAL request.\n\nFrom Tarantool docs: \"Evaulate Lua expression.\"\n\n```\ndb.eval(\"local a, b = ... ; return a + b\", {1, 2}) # Will return response with [3] in its body\n```","summary":"<p>Send EVAL request.</p>","abstract":false,"args":[{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":"String"},{"name":"args","doc":null,"default_value":"[] of MessagePack::Type","external_name":"args","restriction":"Tuple | Array"}],"args_string":"(expression : String, args : Tuple | Array = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">MessagePack</span><span class=\"t\">::</span><span class=\"t\">Type</span>)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L192","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L192","def":{"name":"eval","args":[{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":"String"},{"name":"args","doc":null,"default_value":"[] of MessagePack::Type","external_name":"args","restriction":"Tuple | Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"send(CommandCode::Eval, {Key::Expression.value => expression, Key::Tuple.value => args})"}},{"id":"get(space,key)-instance-method","html_id":"get(space,key)-instance-method","name":"get","doc":"Same as `#select` but with primary index and limit equal to 1.","summary":"<p>Same as <code><a href=\"../../Tarantool/Connection/Requests.html#select%28space%3AInt%7CString%7CSymbol%2Cindex%3AInt%7CString%7CSymbol%2Ckey%3ATuple%7CArray%2Citerator%3AIterator%7CSymbol%7CString%3DIterator%3A%3AEqual%2Coffset%3D0%2Climit%3D2%2A%2A30%29-instance-method\">#select</a></code> but with primary index and limit equal to 1.</p>","abstract":false,"args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":""},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"args_string":"(space, key)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L89","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L89","def":{"name":"get","args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":""},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.select(space, 0, key, limit: 1)"}},{"id":"index_name_to_id(space_id:Int,index_name:String)-instance-method","html_id":"index_name_to_id(space_id:Int,index_name:String)-instance-method","name":"index_name_to_id","doc":"Get index ID by *space_id* and *index_name*. Call `#parse_schema` beforehand.","summary":"<p>Get index ID by <em>space_id</em> and <em>index_name</em>.</p>","abstract":false,"args":[{"name":"space_id","doc":null,"default_value":"","external_name":"space_id","restriction":"Int"},{"name":"index_name","doc":null,"default_value":"","external_name":"index_name","restriction":"String"}],"args_string":"(space_id : Int, index_name : String)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L222","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L222","def":{"name":"index_name_to_id","args":[{"name":"space_id","doc":null,"default_value":"","external_name":"space_id","restriction":"Int"},{"name":"index_name","doc":null,"default_value":"","external_name":"index_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"space_name = @schema.find do |name, values|\n  values[:id] == space_id\nend.try(&.[](0)) || (raise(ArgumentError.new(\"Space ##{space_id} is not found in current schema. Try #parse_schema beforehand\")))\nindex_name_to_id(space_name, index_name)\n"}},{"id":"index_name_to_id(space_name:String,index_name:String)-instance-method","html_id":"index_name_to_id(space_name:String,index_name:String)-instance-method","name":"index_name_to_id","doc":"Get index ID by *space_name* and *index_name*. Call `#parse_schema` beforehand.","summary":"<p>Get index ID by <em>space_name</em> and <em>index_name</em>.</p>","abstract":false,"args":[{"name":"space_name","doc":null,"default_value":"","external_name":"space_name","restriction":"String"},{"name":"index_name","doc":null,"default_value":"","external_name":"index_name","restriction":"String"}],"args_string":"(space_name : String, index_name : String)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L228","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L228","def":{"name":"index_name_to_id","args":[{"name":"space_name","doc":null,"default_value":"","external_name":"space_name","restriction":"String"},{"name":"index_name","doc":null,"default_value":"","external_name":"index_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"space = @schema[space_name]? || (raise(ArgumentError.new(\"Space \\\"#{space_name}\\\" is not found in current schema. Try #parse_schema beforehand\")))\nspace.not_nil![:indexes][index_name] || (raise(ArgumentError.new(\"Index \\\"#{index_name}\\\" is not found in space \\\"#{space_name}\\\". Try #parse_schema beforehand\")))\n"}},{"id":"insert(space:Int|String|Symbol,tuple:Tuple|Array)-instance-method","html_id":"insert(space:Int|String|Symbol,tuple:Tuple|Array)-instance-method","name":"insert","doc":"Send INSERT request.\n\nFrom Tarantool docs: \"Inserts tuple into the space, if no tuple with same unique keys exists. Otherwise throw duplicate key error.\"\n\n```\ndb.insert(999, {1, \"vlad\"})       # Insert into space #999 value {1, \"vlad\"}\ndb.insert(:examples, {1, \"vlad\"}) # ditto\n```","summary":"<p>Send INSERT request.</p>","abstract":false,"args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Int | String | Symbol"},{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"Tuple | Array"}],"args_string":"(space : Int | String | Symbol, tuple : Tuple | Array)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L101","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L101","def":{"name":"insert","args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Int | String | Symbol"},{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"Tuple | Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"convert_space\nsend(CommandCode::Insert, {Key::SpaceID.value => space, Key::Tuple.value => tuple})\n"}},{"id":"ping-instance-method","html_id":"ping-instance-method","name":"ping","doc":"Ping Tarantool and return elapsed time.\n\n```\ndb.ping # => 00:00:00.000181477\n```","summary":"<p>Ping Tarantool and return elapsed time.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L11","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L11","def":{"name":"ping","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Time.measure do\n  send(CommandCode::Ping)\nend"}},{"id":"replace(space:Int|String|Symbol,tuple:Tuple|Array)-instance-method","html_id":"replace(space:Int|String|Symbol,tuple:Tuple|Array)-instance-method","name":"replace","doc":"Send REPLACE request.\n\nFrom Tarantool docs: \"Insert a tuple into the space or replace an existing one.\"\n\n```\ndb.replace(999, {1, \"faust\"}) # Replace in space #999 value {1, \"vlad\"} with {1, \"faust\"} or insert if not exists\n```","summary":"<p>Send REPLACE request.</p>","abstract":false,"args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Int | String | Symbol"},{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"Tuple | Array"}],"args_string":"(space : Int | String | Symbol, tuple : Tuple | Array)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L117","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L117","def":{"name":"replace","args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Int | String | Symbol"},{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"Tuple | Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"convert_space\nsend(CommandCode::Replace, {Key::SpaceID.value => space, Key::Tuple.value => tuple})\n"}},{"id":"select(space:Int|String|Symbol,index:Int|String|Symbol,key:Tuple|Array,iterator:Iterator|Symbol|String=Iterator::Equal,offset=0,limit=2**30)-instance-method","html_id":"select(space:Int|String|Symbol,index:Int|String|Symbol,key:Tuple|Array,iterator:Iterator|Symbol|String=Iterator::Equal,offset=0,limit=2**30)-instance-method","name":"select","doc":"Send SELECT request.\n\nFrom Tarantool docs: \"Find tuples matching the search pattern.\"\n\n```\ndb.select(999, 0, {1})                 # Select {1} from space #999 by index #0\ndb.select(\"examples\", \"primary\", {1})  # ditto\ndb.select(:examples, :wage, {50}, :>=) # Select with wage >= 50\n```\n\nIterators mapping (string or symbol value is accepted):\n\n* **Equal:** `eq` *or* `==`\n* **Reversed equal:** `reveq` *or* `==<`\n* **All:** `all` *or* `*`\n* **Less than:** `lt` *or* `<`\n* **Less than or equal:** `lte` *or* `<=`\n* **Greater than or equal:** `gte` *or* `>=`\n* **Greater than:** `gt` *or* `>`\n* **Bits all set:** `bitall` *or* `&=`\n* **Bits any set:** `bitany` *or* `&`\n* **Rtree overlaps:** `overlaps` *or* `&&`\n* **Rtree neighbor:** `neighbor` *or* `<->`\n\nAlso see [iterators documentation](https://tarantool.io/en/doc/1.9/book/box/box_index.html#box-index-iterator-types).","summary":"<p>Send SELECT request.</p>","abstract":false,"args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Int | String | Symbol"},{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int | String | Symbol"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Tuple | Array"},{"name":"iterator","doc":null,"default_value":"Iterator::Equal","external_name":"iterator","restriction":"Iterator | Symbol | String"},{"name":"offset","doc":null,"default_value":"0","external_name":"offset","restriction":""},{"name":"limit","doc":null,"default_value":"2 ** 30","external_name":"limit","restriction":""}],"args_string":"(space : Int | String | Symbol, index : Int | String | Symbol, key : Tuple | Array, iterator : Iterator | Symbol | String = <span class=\"t\">Iterator</span><span class=\"t\">::</span><span class=\"t\">Equal</span>, offset = <span class=\"n\">0</span>, limit = <span class=\"n\">2</span> <span class=\"o\">**</span> <span class=\"n\">30</span>)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L64","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L64","def":{"name":"select","args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Int | String | Symbol"},{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int | String | Symbol"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Tuple | Array"},{"name":"iterator","doc":null,"default_value":"Iterator::Equal","external_name":"iterator","restriction":"Iterator | Symbol | String"},{"name":"offset","doc":null,"default_value":"0","external_name":"offset","restriction":""},{"name":"limit","doc":null,"default_value":"2 ** 30","external_name":"limit","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"convert_space_and_index\nif iterator.is_a?(Iterator)\nelse\n  iterator = convert_iterator(iterator)\nend\nsend(CommandCode::Select, {Key::SpaceID.value => space, Key::IndexID.value => index, Key::Limit.value => limit, Key::Offset.value => offset, Key::Iterator.value => iterator.value, Key::Key.value => key})\n"}},{"id":"space_name_to_id(name:String)-instance-method","html_id":"space_name_to_id(name:String)-instance-method","name":"space_name_to_id","doc":"Get space ID by its *name*. Call `#parse_schema` beforehand.","summary":"<p>Get space ID by its <em>name</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L217","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L217","def":{"name":"space_name_to_id","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@schema[name]?.try(&.[](:id)) || (raise(ArgumentError.new(\"Space \\\"#{name}\\\" is not found in current schema. Try #parse_schema beforehand\")))"}},{"id":"update(space:Int|String|Symbol,index:Int|String|Symbol,key:Tuple|Array,tuple:Array)-instance-method","html_id":"update(space:Int|String|Symbol,index:Int|String|Symbol,key:Tuple|Array,tuple:Array)-instance-method","name":"update","doc":"Send UPDATE request.\n\nFrom Tarantool docs: \"Update a tuple. It is an error to specify an argument of a type that differs from the expected type.\"\n\n```\ndb.update(999, 0, {1}, [{\":\", 1, 0, 0, \"vlad\"}]) # Append \"vlad\" to \"faust\", resulting in \"vladfaust\"\n```","summary":"<p>Send UPDATE request.</p>","abstract":false,"args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Int | String | Symbol"},{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int | String | Symbol"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Tuple | Array"},{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"Array"}],"args_string":"(space : Int | String | Symbol, index : Int | String | Symbol, key : Tuple | Array, tuple : Array)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L133","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L133","def":{"name":"update","args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Int | String | Symbol"},{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int | String | Symbol"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Tuple | Array"},{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"convert_space_and_index\nsend(CommandCode::Update, {Key::SpaceID.value => space, Key::IndexID.value => index, Key::Key.value => key, Key::Tuple.value => tuple})\n"}},{"id":"upsert(space:Int|String|Symbol,tuple:Tuple|Array,ops:Array)-instance-method","html_id":"upsert(space:Int|String|Symbol,tuple:Tuple|Array,ops:Array)-instance-method","name":"upsert","doc":"Send UPSERT request.\n\nFrom Tarantool docs: \"Update tuple if it would be found elsewhere try to insert tuple. Always use primary index for key.\"\n\n```\ndb.eval(999, {1, \"vlad\"}, [\"=\", 1, \"vladfaust\"]) # Insert {1, \"vlad\"} or replace its name with \"vladfaust\"\n```","summary":"<p>Send UPSERT request.</p>","abstract":false,"args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Int | String | Symbol"},{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"Tuple | Array"},{"name":"ops","doc":null,"default_value":"","external_name":"ops","restriction":"Array"}],"args_string":"(space : Int | String | Symbol, tuple : Tuple | Array, ops : Array)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L206","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection/requests.cr#L206","def":{"name":"upsert","args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Int | String | Symbol"},{"name":"tuple","doc":null,"default_value":"","external_name":"tuple","restriction":"Tuple | Array"},{"name":"ops","doc":null,"default_value":"","external_name":"ops","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"convert_space\nsend(CommandCode::Upsert, {Key::SpaceID.value => space, Key::Tuple.value => tuple, Key::Ops.value => ops})\n"}}],"macros":[],"types":[]},{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Connection/Schema","path":"Tarantool/Connection/Schema.html","kind":"alias","full_name":"Tarantool::Connection::Schema","name":"Schema","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"tarantool/connection.cr","line_number":107,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/connection.cr"}],"repository_name":"github.com/vladfaust/tarantool-crystal","program":false,"enum":false,"alias":true,"aliased":"Hash(String, NamedTuple(id: UInt16, indexes: Hash(String, UInt8)))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Connection","kind":"class","full_name":"Tarantool::Connection","name":"Connection"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Iterator","path":"Tarantool/Iterator.html","kind":"enum","full_name":"Tarantool::Iterator","name":"Iterator","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/vladfaust/tarantool-crystal/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/vladfaust/tarantool-crystal/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/vladfaust/tarantool-crystal/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/vladfaust/tarantool-crystal/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"tarantool/constants.cr","line_number":43,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr"}],"repository_name":"github.com/vladfaust/tarantool-crystal","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"name":"Equal","value":"0","doc":null,"summary":null},{"name":"ReversedEqual","value":"1","doc":null,"summary":null},{"name":"All","value":"2","doc":null,"summary":null},{"name":"LessThan","value":"3","doc":null,"summary":null},{"name":"LessThanOrEqual","value":"4","doc":null,"summary":null},{"name":"GreaterThanOrEqual","value":"5","doc":null,"summary":null},{"name":"GreaterThan","value":"6","doc":null,"summary":null},{"name":"BitsAllSet","value":"7","doc":null,"summary":null},{"name":"BitsAnySet","value":"8","doc":null,"summary":null},{"name":"BitsAllNotSet","value":"9","doc":null,"summary":null},{"name":"RtreeOverlaps","value":"10","doc":null,"summary":null},{"name":"RtreeNeighbor","value":"11","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool","kind":"module","full_name":"Tarantool","name":"Tarantool"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"all?-instance-method","html_id":"all?-instance-method","name":"all?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L46","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L46","def":{"name":"all?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == All"}},{"id":"bits_all_not_set?-instance-method","html_id":"bits_all_not_set?-instance-method","name":"bits_all_not_set?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L53","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L53","def":{"name":"bits_all_not_set?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == BitsAllNotSet"}},{"id":"bits_all_set?-instance-method","html_id":"bits_all_set?-instance-method","name":"bits_all_set?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L51","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L51","def":{"name":"bits_all_set?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == BitsAllSet"}},{"id":"bits_any_set?-instance-method","html_id":"bits_any_set?-instance-method","name":"bits_any_set?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L52","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L52","def":{"name":"bits_any_set?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == BitsAnySet"}},{"id":"equal?-instance-method","html_id":"equal?-instance-method","name":"equal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L44","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L44","def":{"name":"equal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Equal"}},{"id":"greater_than?-instance-method","html_id":"greater_than?-instance-method","name":"greater_than?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L50","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L50","def":{"name":"greater_than?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GreaterThan"}},{"id":"greater_than_or_equal?-instance-method","html_id":"greater_than_or_equal?-instance-method","name":"greater_than_or_equal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L49","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L49","def":{"name":"greater_than_or_equal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GreaterThanOrEqual"}},{"id":"less_than?-instance-method","html_id":"less_than?-instance-method","name":"less_than?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L47","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L47","def":{"name":"less_than?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LessThan"}},{"id":"less_than_or_equal?-instance-method","html_id":"less_than_or_equal?-instance-method","name":"less_than_or_equal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L48","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L48","def":{"name":"less_than_or_equal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LessThanOrEqual"}},{"id":"reversed_equal?-instance-method","html_id":"reversed_equal?-instance-method","name":"reversed_equal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L45","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L45","def":{"name":"reversed_equal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ReversedEqual"}},{"id":"rtree_neighbor?-instance-method","html_id":"rtree_neighbor?-instance-method","name":"rtree_neighbor?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L55","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L55","def":{"name":"rtree_neighbor?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RtreeNeighbor"}},{"id":"rtree_overlaps?-instance-method","html_id":"rtree_overlaps?-instance-method","name":"rtree_overlaps?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L54","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L54","def":{"name":"rtree_overlaps?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RtreeOverlaps"}}],"macros":[],"types":[]},{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Key","path":"Tarantool/Key.html","kind":"enum","full_name":"Tarantool::Key","name":"Key","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/vladfaust/tarantool-crystal/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/vladfaust/tarantool-crystal/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/vladfaust/tarantool-crystal/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/vladfaust/tarantool-crystal/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"tarantool/constants.cr","line_number":2,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr"}],"repository_name":"github.com/vladfaust/tarantool-crystal","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"name":"Code","value":"0","doc":null,"summary":null},{"name":"Sync","value":"1","doc":null,"summary":null},{"name":"SchemaID","value":"5","doc":null,"summary":null},{"name":"SpaceID","value":"16","doc":null,"summary":null},{"name":"IndexID","value":"17","doc":null,"summary":null},{"name":"Limit","value":"18","doc":null,"summary":null},{"name":"Offset","value":"19","doc":null,"summary":null},{"name":"Iterator","value":"20","doc":null,"summary":null},{"name":"Key","value":"32","doc":null,"summary":null},{"name":"Tuple","value":"33","doc":null,"summary":null},{"name":"FunctionName","value":"34","doc":null,"summary":null},{"name":"Username","value":"35","doc":null,"summary":null},{"name":"Expression","value":"39","doc":null,"summary":null},{"name":"Ops","value":"40","doc":null,"summary":null},{"name":"Data","value":"48","doc":null,"summary":null},{"name":"Error","value":"49","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool","kind":"module","full_name":"Tarantool","name":"Tarantool"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"code?-instance-method","html_id":"code?-instance-method","name":"code?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L3","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L3","def":{"name":"code?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Code"}},{"id":"data?-instance-method","html_id":"data?-instance-method","name":"data?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L17","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L17","def":{"name":"data?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Data"}},{"id":"error?-instance-method","html_id":"error?-instance-method","name":"error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L18","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L18","def":{"name":"error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Error"}},{"id":"expression?-instance-method","html_id":"expression?-instance-method","name":"expression?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L15","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L15","def":{"name":"expression?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Expression"}},{"id":"function_name?-instance-method","html_id":"function_name?-instance-method","name":"function_name?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L13","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L13","def":{"name":"function_name?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FunctionName"}},{"id":"index_id?-instance-method","html_id":"index_id?-instance-method","name":"index_id?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L7","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L7","def":{"name":"index_id?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == IndexID"}},{"id":"iterator?-instance-method","html_id":"iterator?-instance-method","name":"iterator?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L10","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L10","def":{"name":"iterator?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Iterator"}},{"id":"key?-instance-method","html_id":"key?-instance-method","name":"key?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L11","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L11","def":{"name":"key?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Key"}},{"id":"limit?-instance-method","html_id":"limit?-instance-method","name":"limit?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L8","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L8","def":{"name":"limit?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Limit"}},{"id":"offset?-instance-method","html_id":"offset?-instance-method","name":"offset?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L9","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L9","def":{"name":"offset?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Offset"}},{"id":"ops?-instance-method","html_id":"ops?-instance-method","name":"ops?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L16","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L16","def":{"name":"ops?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Ops"}},{"id":"schema_id?-instance-method","html_id":"schema_id?-instance-method","name":"schema_id?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L5","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L5","def":{"name":"schema_id?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SchemaID"}},{"id":"space_id?-instance-method","html_id":"space_id?-instance-method","name":"space_id?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L6","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L6","def":{"name":"space_id?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SpaceID"}},{"id":"sync?-instance-method","html_id":"sync?-instance-method","name":"sync?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L4","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L4","def":{"name":"sync?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Sync"}},{"id":"tuple?-instance-method","html_id":"tuple?-instance-method","name":"tuple?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L12","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L12","def":{"name":"tuple?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Tuple"}},{"id":"username?-instance-method","html_id":"username?-instance-method","name":"username?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L14","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L14","def":{"name":"username?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Username"}}],"macros":[],"types":[]},{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Response","path":"Tarantool/Response.html","kind":"struct","full_name":"Tarantool::Response","name":"Response","abstract":false,"superclass":{"html_id":"github.com/vladfaust/tarantool-crystal/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/vladfaust/tarantool-crystal/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/vladfaust/tarantool-crystal/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/vladfaust/tarantool-crystal/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"tarantool/response/error.cr","line_number":2,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response/error.cr"},{"filename":"tarantool/response.cr","line_number":19,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr"}],"repository_name":"github.com/vladfaust/tarantool-crystal","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool","kind":"module","full_name":"Tarantool","name":"Tarantool"},"doc":"A response sent by Tarantool. It should not be initialized manually.\n\nSee [Tarantool docs](https://tarantool.io/en/doc/1.9/dev_guide/internals_index.html#response-packet-structure) to know more about responses.\n\nExample:\n\n```\nresponse = db.select(999, 0, {1})\nif response.success?\n  puts response.body.data\nend\n# => [[1, \"hello world\"]]\n```","summary":"<p>A response sent by Tarantool.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"body-instance-method","html_id":"body-instance-method","name":"body","doc":"An alias for `body?.not_nil!`. Use it when you're sure if the body is present.\n\n```\nif response.success?\n  p response.body.data\nend\n```","summary":"<p>An alias for <code>body?.not_nil!</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L94","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L94","def":{"name":"body","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@body.not_nil!"}},{"id":"body?:Tarantool::Response::Body?-instance-method","html_id":"body?:Tarantool::Response::Body?-instance-method","name":"body?","doc":"The response's body, safe way. Use it when you're not sure if it's present.\n\n```\np response.body?.try &.data\n```","summary":"<p>The response's body, safe way.</p>","abstract":false,"args":[],"args_string":" : Tarantool::Response::Body?","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L83","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L83","def":{"name":"body?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@body"}},{"id":"error:String?-instance-method","html_id":"error:String?-instance-method","name":"error","doc":"An error if any. The body is likely to be empty in this case.","summary":"<p>An error if any.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L99","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L99","def":{"name":"error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@error"}},{"id":"header:Header-instance-method","html_id":"header:Header-instance-method","name":"header","doc":"The response's header.","summary":"<p>The response's header.</p>","abstract":false,"args":[],"args_string":" : Header","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L74","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L74","def":{"name":"header","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Header","visibility":"Public","body":"@header"}},{"id":"success?-instance-method","html_id":"success?-instance-method","name":"success?","doc":"Alias of `error.nil?`.","summary":"<p>Alias of <code>error.nil?</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L102","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L102","def":{"name":"success?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"error.nil?"}}],"macros":[],"types":[{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Response/Body","path":"Tarantool/Response/Body.html","kind":"struct","full_name":"Tarantool::Response::Body","name":"Body","abstract":false,"superclass":{"html_id":"github.com/vladfaust/tarantool-crystal/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/vladfaust/tarantool-crystal/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/vladfaust/tarantool-crystal/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/vladfaust/tarantool-crystal/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"tarantool/response.cr","line_number":59,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr"}],"repository_name":"github.com/vladfaust/tarantool-crystal","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Response","kind":"struct","full_name":"Tarantool::Response","name":"Response"},"doc":"A header of a `Response` sent by Tarantool. It should not be initialized manually.","summary":"<p>A header of a <code><a href=\"../../Tarantool/Response.html\">Response</a></code> sent by Tarantool.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"data-instance-method","html_id":"data-instance-method","name":"data","doc":"The body's data. It's usually an array of arrays.","summary":"<p>The body's data.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L63","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L63","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data.not_nil!"}}],"macros":[],"types":[]},{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Response/Error","path":"Tarantool/Response/Error.html","kind":"class","full_name":"Tarantool::Response::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/vladfaust/tarantool-crystal/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/vladfaust/tarantool-crystal/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/vladfaust/tarantool-crystal/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/vladfaust/tarantool-crystal/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"tarantool/response/error.cr","line_number":3,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response/error.cr"}],"repository_name":"github.com/vladfaust/tarantool-crystal","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Response","kind":"struct","full_name":"Tarantool::Response","name":"Response"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(response:Response)-class-method","html_id":"new(response:Response)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Response"}],"args_string":"(response : Response)","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response/error.cr#L4","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response/error.cr#L4","def":{"name":"new","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Response/Header","path":"Tarantool/Response/Header.html","kind":"struct","full_name":"Tarantool::Response::Header","name":"Header","abstract":false,"superclass":{"html_id":"github.com/vladfaust/tarantool-crystal/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/vladfaust/tarantool-crystal/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/vladfaust/tarantool-crystal/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/vladfaust/tarantool-crystal/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"tarantool/response.cr","line_number":21,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr"}],"repository_name":"github.com/vladfaust/tarantool-crystal","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/Response","kind":"struct","full_name":"Tarantool::Response","name":"Response"},"doc":"A header of a `Response` sent by Tarantool. It should not be initialized manually.","summary":"<p>A header of a <code><a href=\"../../Tarantool/Response.html\">Response</a></code> sent by Tarantool.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"code-instance-method","html_id":"code-instance-method","name":"code","doc":"The header's `ResponseCode`.","summary":"<p>The header's <code><a href=\"../../Tarantool/ResponseCode.html\">ResponseCode</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L27","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L27","def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@code.not_nil!"}},{"id":"schema_id-instance-method","html_id":"schema_id-instance-method","name":"schema_id","doc":"An actual schema ID.","summary":"<p>An actual schema ID.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L37","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L37","def":{"name":"schema_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@schema_id.not_nil!"}},{"id":"sync-instance-method","html_id":"sync-instance-method","name":"sync","doc":"A sync number. Used to know which request does this particular response belongs to.","summary":"<p>A sync number.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L32","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/response.cr#L32","def":{"name":"sync","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sync.not_nil!"}}],"macros":[],"types":[]}]},{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool/ResponseCode","path":"Tarantool/ResponseCode.html","kind":"enum","full_name":"Tarantool::ResponseCode","name":"ResponseCode","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/vladfaust/tarantool-crystal/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/vladfaust/tarantool-crystal/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/vladfaust/tarantool-crystal/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/vladfaust/tarantool-crystal/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"tarantool/constants.cr","line_number":38,"url":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr"}],"repository_name":"github.com/vladfaust/tarantool-crystal","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"name":"OK","value":"0","doc":null,"summary":null},{"name":"Error","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/tarantool-crystal/Tarantool","kind":"module","full_name":"Tarantool","name":"Tarantool"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"error?-instance-method","html_id":"error?-instance-method","name":"error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L40","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L40","def":{"name":"error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Error"}},{"id":"ok?-instance-method","html_id":"ok?-instance-method","name":"ok?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L39","source_link":"https://github.com/vladfaust/tarantool-crystal/blob/4c90806e2024abbb8db82c4578426a0585b352fb/src/tarantool/constants.cr#L39","def":{"name":"ok?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == OK"}}],"macros":[],"types":[]}]}]}}